{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[turbopack]/browser/dev/hmr-client/websocket.ts"],"sourcesContent":["// Adapted from https://github.com/vercel/next.js/blob/canary/packages/next/src/client/dev/error-overlay/websocket.ts\n\nlet source: WebSocket;\nconst eventCallbacks: ((msg: WebSocketMessage) => void)[] = [];\n\n// TODO: add timeout again\n// let lastActivity = Date.now()\n\nfunction getSocketProtocol(assetPrefix: string): string {\n  let protocol = location.protocol;\n\n  try {\n    // assetPrefix is a url\n    protocol = new URL(assetPrefix).protocol;\n  } catch (_) {}\n\n  return protocol === \"http:\" ? \"ws\" : \"wss\";\n}\n\nexport type WebSocketMessage =\n  | {\n      type: \"turbopack-connected\";\n    }\n  | {\n      type: \"turbopack-message\";\n      data: Record<string, any>;\n    };\n\nexport function addMessageListener(cb: (msg: WebSocketMessage) => void) {\n  eventCallbacks.push(cb);\n}\n\nexport function sendMessage(data: any) {\n  if (!source || source.readyState !== source.OPEN) return;\n  return source.send(data);\n}\n\nexport type HMROptions = {\n  path: string;\n  assetPrefix: string;\n  timeout?: number;\n  log?: boolean;\n};\n\nexport function connectHMR(options: HMROptions) {\n  const { timeout = 5 * 1000 } = options;\n\n  function init() {\n    if (source) source.close();\n\n    console.log(\"[HMR] connecting...\");\n\n    function handleOnline() {\n      const connected = { type: \"turbopack-connected\" as const };\n      eventCallbacks.forEach((cb) => {\n        cb(connected);\n      });\n\n      if (options.log) console.log(\"[HMR] connected\");\n      // lastActivity = Date.now()\n    }\n\n    function handleMessage(event: MessageEvent) {\n      // lastActivity = Date.now()\n\n      const message = {\n        type: \"turbopack-message\" as const,\n        data: JSON.parse(event.data),\n      };\n      eventCallbacks.forEach((cb) => {\n        cb(message);\n      });\n    }\n\n    // let timer: NodeJS.Timeout\n\n    function handleDisconnect() {\n      source.close();\n      setTimeout(init, timeout);\n    }\n\n    const { hostname, port } = location;\n    const protocol = getSocketProtocol(options.assetPrefix || \"\");\n    const assetPrefix = options.assetPrefix.replace(/^\\/+/, \"\");\n\n    let url = `${protocol}://${hostname}:${port}${\n      assetPrefix ? `/${assetPrefix}` : \"\"\n    }`;\n\n    if (assetPrefix.startsWith(\"http\")) {\n      url = `${protocol}://${assetPrefix.split(\"://\")[1]}`;\n    }\n\n    source = new window.WebSocket(`${url}${options.path}`);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  init();\n}\n"],"names":[],"mappings":"AAAA,qHAAqH;;;;;;AAErH,IAAI;AACJ,MAAM,iBAAsD,EAAE;AAE9D,0BAA0B;AAC1B,gCAAgC;AAEhC,SAAS,kBAAkB,WAAmB;IAC5C,IAAI,WAAW,SAAS,QAAQ;IAEhC,IAAI;QACF,uBAAuB;QACvB,WAAW,IAAI,IAAI,aAAa,QAAQ;IAC1C,EAAE,OAAO,GAAG,CAAC;IAEb,OAAO,aAAa,UAAU,OAAO;AACvC;AAWO,SAAS,mBAAmB,EAAmC;IACpE,eAAe,IAAI,CAAC;AACtB;AAEO,SAAS,YAAY,IAAS;IACnC,IAAI,CAAC,UAAU,OAAO,UAAU,KAAK,OAAO,IAAI,EAAE;IAClD,OAAO,OAAO,IAAI,CAAC;AACrB;AASO,SAAS,WAAW,OAAmB;IAC5C,MAAM,EAAE,UAAU,IAAI,IAAI,EAAE,GAAG;IAE/B,SAAS;QACP,IAAI,QAAQ,OAAO,KAAK;QAExB,QAAQ,GAAG,CAAC;QAEZ,SAAS;YACP,MAAM,YAAY;gBAAE,MAAM;YAA+B;YACzD,eAAe,OAAO,CAAC,CAAC;gBACtB,GAAG;YACL;YAEA,IAAI,QAAQ,GAAG,EAAE,QAAQ,GAAG,CAAC;QAC7B,4BAA4B;QAC9B;QAEA,SAAS,cAAc,KAAmB;YACxC,4BAA4B;YAE5B,MAAM,UAAU;gBACd,MAAM;gBACN,MAAM,KAAK,KAAK,CAAC,MAAM,IAAI;YAC7B;YACA,eAAe,OAAO,CAAC,CAAC;gBACtB,GAAG;YACL;QACF;QAEA,4BAA4B;QAE5B,SAAS;YACP,OAAO,KAAK;YACZ,WAAW,MAAM;QACnB;QAEA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG;QAC3B,MAAM,WAAW,kBAAkB,QAAQ,WAAW,IAAI;QAC1D,MAAM,cAAc,QAAQ,WAAW,CAAC,OAAO,CAAC,QAAQ;QAExD,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,SAAS,CAAC,EAAE,OACrC,cAAc,CAAC,CAAC,EAAE,aAAa,GAAG,IAClC;QAEF,IAAI,YAAY,UAAU,CAAC,SAAS;YAClC,MAAM,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;QACtD;QAEA,SAAS,IAAI,OAAO,SAAS,CAAC,GAAG,MAAM,QAAQ,IAAI,EAAE;QACrD,OAAO,MAAM,GAAG;QAChB,OAAO,OAAO,GAAG;QACjB,OAAO,SAAS,GAAG;IACrB;IAEA;AACF","ignoreList":[0]}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["turbopack://[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\nimport {\n  addMessageListener as turboSocketAddMessageListener,\n  sendMessage as turboSocketSendMessage,\n} from \"./websocket\";\ntype SendMessage = typeof import(\"./websocket\").sendMessage;\n\nexport type ClientOptions = {\n  addMessageListener: typeof import(\"./websocket\").addMessageListener;\n  sendMessage: SendMessage;\n  onUpdateError: (err: unknown) => void;\n};\n\nexport function connect({\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  addMessageListener = turboSocketAddMessageListener,\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  sendMessage = turboSocketSendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case \"turbopack-connected\":\n        handleSocketConnected(sendMessage);\n        break;\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage);\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage);\n          }\n          applyAggregatedUpdates();\n        } catch (e: unknown) {\n          console.warn(\n            \"[Fast Refresh] performing full reload\\n\\n\" +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\n          );\n          onUpdateError(e);\n          location.reload();\n        }\n        break;\n    }\n  });\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error(\"A separate HMR handler was already registered\");\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    },\n  };\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>;\n  unsubscribe: () => void;\n};\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message));\n}\n\ntype ResourceKey = string;\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  });\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: \"turbopack-subscribe\",\n    ...resource,\n  });\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: \"turbopack-unsubscribe\",\n      ...resource,\n    });\n  };\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key));\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map();\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource);\n  let aggregated = chunkListsWithPendingUpdates.get(key);\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    );\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg);\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return;\n  hooks.beforeRefresh();\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg);\n  }\n  chunkListsWithPendingUpdates.clear();\n  finalizeUpdate();\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks;\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks;\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks;\n  }\n\n  let merged;\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged;\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0];\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        );\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        );\n      }\n\n      merged = [update];\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged;\n  }\n\n  return {\n    type: \"ChunkListUpdate\",\n    chunks,\n    merged,\n  };\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  return chunks;\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\n  ) {\n    return undefined;\n  }\n\n  if (updateA.type === \"partial\") {\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\n  }\n\n  if (updateB.type === \"partial\") {\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\n  }\n\n  return undefined;\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\n\n  return {\n    type: \"EcmascriptMergedUpdate\",\n    entries,\n    chunks,\n  };\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB };\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB;\n  }\n\n  if (chunksB == null) {\n    return chunksA;\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      );\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined;\n  }\n\n  return chunks;\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\n    // These two completely cancel each other out.\n    return undefined;\n  }\n\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\n    const added = [];\n    const deleted = [];\n    const deletedModules = new Set(updateA.modules ?? []);\n    const addedModules = new Set(updateB.modules ?? []);\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId);\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId);\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined;\n    }\n\n    return {\n      type: \"partial\",\n      added,\n      deleted,\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ]);\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId);\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"partial\",\n      added: [...added],\n      deleted: [...deleted],\n    };\n  }\n\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ]);\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId);\n    }\n\n    return {\n      type: \"added\",\n      modules: [...modules],\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? []);\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"deleted\",\n      modules: [...modules],\n    };\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined;\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`);\n}\n\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length;\n  const bI = list.indexOf(b) + 1 || list.length;\n  return aI - bI;\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\n\nfunction emitIssues() {\n  const issues = [];\n  const deduplicationSet = new Set();\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\n\n      issues.push(chunkIssue);\n      deduplicationSet.add(chunkIssue.formatted);\n    }\n  }\n\n  sortIssues(issues);\n\n  hooks.issues(issues);\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource);\n  let hasCriticalIssues = false;\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true;\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues);\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key);\n  }\n\n  emitIssues();\n\n  return hasCriticalIssues;\n}\n\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\nconst CATEGORY_ORDER = [\n  \"parse\",\n  \"resolve\",\n  \"code generation\",\n  \"rendering\",\n  \"typescript\",\n  \"other\",\n];\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\n    if (first !== 0) return first;\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\n  });\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n};\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks);\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues);\n\n  handleIssues(msg);\n\n  switch (msg.type) {\n    case \"issues\":\n      // issues are already handled\n      break;\n    case \"partial\":\n      // aggregate updates\n      aggregateUpdates(msg);\n      break;\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\n      if (runHooks) hooks.beforeRefresh();\n      triggerUpdate(msg);\n      if (runHooks) finalizeUpdate();\n      break;\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh();\n  hooks.buildOk();\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB();\n    globalThis.__NEXT_HMR_CB = null;\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkPath: ChunkPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkPath,\n    },\n    sendMessage,\n    callback\n  );\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  if (callback === undefined) {\n    callback = sendMessage;\n    sendMessage = turboSocketSendMessage;\n  }\n\n  const key = resourceKey(resource);\n  let callbackSet: UpdateCallbackSet;\n  const existingCallbackSet = updateCallbackSets.get(key);\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    };\n    updateCallbackSets.set(key, callbackSet);\n  } else {\n    existingCallbackSet.callbacks.add(callback);\n    callbackSet = existingCallbackSet;\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback);\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe();\n      updateCallbackSets.delete(key);\n    }\n  };\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource);\n  const callbackSet = updateCallbackSets.get(key);\n  if (!callbackSet) {\n    return;\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg);\n  }\n\n  if (msg.type === \"notFound\") {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\n\r\ninterface User {\r\n  username: string;  // 단일 식별자로 username만 사용\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  signup: (username: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // 백엔드의 토큰 검증 API 호출\r\n      fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Invalid token');\r\n      })\r\n      .then(userData => {\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', username);  // OAuth2는 'username' 필드를 사용\r\n      formData.append('password', password);\r\n\r\n      const response = await fetch('http://localhost:8000/api/auth/login', {\r\n        method: 'POST',\r\n        body: formData  // JSON 대신 FormData 사용\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        if (error.detail === \"Incorrect email or password\") {\r\n          throw new Error('이메일 또는 비밀번호가 잘못되었습니다');\r\n        }\r\n        throw new Error('로그인 실패');\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.access_token);\r\n      \r\n      // 사용자 정보 가져오기\r\n      const userResponse = await fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${data.access_token}`\r\n        }\r\n      });\r\n\r\n      if (userResponse.ok) {\r\n        const userData = await userResponse.json();\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const signup = async (username: string, password: string) => {\r\n    // 이메일 유효성 검사\r\n    if (username.length > 100) {\r\n      throw new Error('이메일은 100자를 초과할 수 없습니다');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        if (error.detail === \"Email already registered\") {\r\n          throw new Error('같은 아이디가 존재합니다');\r\n        }\r\n        throw new Error('회원가입 실패');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return React.createElement(AuthContext.Provider, \r\n    { value: { user, isAuthenticated, login, logout, signup } },\r\n    children\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/LoginForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface LoginFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function LoginForm({ onClose }: LoginFormProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      await login(email, password);\r\n      onClose();\r\n    } catch (err: any) {\r\n      if (err.message.includes('not found')) {\r\n        setError('아이디가 존재하지 않습니다');\r\n      } else if (err.message.includes('password')) {\r\n        setError('비밀번호 오류입니다');\r\n      } else {\r\n        setError('로그인 중 오류가 발생했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">비밀번호</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n          required\r\n        />\r\n      </div>\r\n      {error && (\r\n        <div className=\"text-red-500 text-sm\">{error}</div>\r\n      )}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors\"\r\n      >\r\n        로그인\r\n      </button>\r\n    </form>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAMe,SAAS,UAAU,EAAE,OAAO,EAAkB;;IAC3D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,UAAO,AAAD;IAExB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,IAAI;YACF,MAAM,MAAM,OAAO;YACnB;QACF,EAAE,OAAO,KAAU;YACjB,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,cAAc;gBACrC,SAAS;YACX,OAAO,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa;gBAC3C,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,qBACE,0JAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,0JAAC;;kCACC,0JAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,0JAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;wBACV,QAAQ;;;;;;;;;;;;0BAGZ,0JAAC;;kCACC,0JAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,0JAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,WAAU;wBACV,QAAQ;;;;;;;;;;;;YAGX,uBACC,0JAAC;gBAAI,WAAU;0BAAwB;;;;;;0BAEzC,0JAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP;GAzDwB;;QAIJ,mHAAA,CAAA,UAAO;;;KAJH"}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/SignupForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface SignupFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function SignupForm({ onClose }: SignupFormProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const { signup } = useAuth();\r\n\r\n  const validateEmail = (email: string) => {\r\n    if (email.length > 100) {\r\n      return '이메일은 100자를 초과할 수 없습니다';\r\n    }\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      return '유효한 이메일 주소를 입력해주세요';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    // 이메일 유효성 검사\r\n    const emailError = validateEmail(email);\r\n    if (emailError) {\r\n      setError(emailError);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await signup(email, password);\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 2000);\r\n    } catch (err: any) {\r\n      if (err.message.includes('같은 아이디가 존재합니다')) {\r\n        setError('같은 아이디가 존재합니다');\r\n        setEmail('');\r\n        setPassword('');\r\n      } else if (err.message.includes('100자를 초과')) {\r\n        setError('이메일은 100자를 초과할 수 없습니다');\r\n      } else {\r\n        setError('회원가입 중 오류가 발생했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      {success ? (\r\n        <div className=\"text-green-500 text-center py-4\">\r\n          회원가입이 완료되었습니다!\r\n          <br />\r\n          로그인 해주세요.\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              maxLength={100}\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n              required\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">최대 100자</p>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">비밀번호</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n              required\r\n            />\r\n          </div>\r\n          {error && (\r\n            <div className=\"text-red-500 text-sm\">{error}</div>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors\"\r\n          >\r\n            회원가입\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAMe,SAAS,WAAW,EAAE,OAAO,EAAmB;;IAC7D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,UAAO,AAAD;IAEzB,MAAM,gBAAgB,CAAC;QACrB,IAAI,MAAM,MAAM,GAAG,KAAK;YACtB,OAAO;QACT;QACA,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAC3B,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,aAAa;QACb,MAAM,aAAa,cAAc;QACjC,IAAI,YAAY;YACd,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,OAAO,OAAO;YACpB,WAAW;YACX,WAAW;gBACT;YACF,GAAG;QACL,EAAE,OAAO,KAAU;YACjB,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB;gBACzC,SAAS;gBACT,SAAS;gBACT,YAAY;YACd,OAAO,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa;gBAC3C,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,qBACE,0JAAC;QAAK,UAAU;QAAc,WAAU;kBACrC,wBACC,0JAAC;YAAI,WAAU;;gBAAkC;8BAE/C,0JAAC;;;;;gBAAK;;;;;;iCAIR;;8BACE,0JAAC;;sCACC,0JAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAC3D,0JAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAW;4BACX,WAAU;4BACV,QAAQ;;;;;;sCAEV,0JAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;8BAE5C,0JAAC;;sCACC,0JAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAC3D,0JAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;;gBAGX,uBACC,0JAAC;oBAAI,WAAU;8BAAwB;;;;;;8BAEzC,0JAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;AAOX;GA7FwB;;QAKH,mHAAA,CAAA,UAAO;;;KALJ"}},
    {"offset": {"line": 1003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/AuthModal.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport SignupForm from '../auth/SignupForm';\r\n\r\ninterface AuthModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  initialMode?: 'login' | 'signup';\r\n}\r\n\r\nexport default function AuthModal({ isOpen, onClose, initialMode = 'login' }: AuthModalProps) {\r\n  useEffect(() => {\r\n    setMode(initialMode);\r\n  }, [initialMode]);\r\n\r\n  const [mode, setMode] = useState<'login' | 'signup'>(initialMode);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-semibold\">\r\n            {mode === 'login' ? '로그인' : '회원가입'}\r\n          </h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {mode === 'login' ? (\r\n          <LoginForm onClose={onClose} />\r\n        ) : (\r\n          <SignupForm onClose={onClose} />\r\n        )}\r\n\r\n        <div className=\"mt-4 text-center\">\r\n          {mode === 'login' ? (\r\n            <button\r\n              onClick={() => setMode('signup')}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              계정이 없으신가요? 회원가입\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => setMode('login')}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              이미 계정이 있으신가요? 로그인\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAQe,SAAS,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,OAAO,EAAkB;;IAC1F,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;+BAAE;YACR,QAAQ;QACV;8BAAG;QAAC;KAAY;IAEhB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAsB;IAErD,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,0JAAC;QAAI,WAAU;kBACb,cAAA,0JAAC;YAAI,WAAU;;8BACb,0JAAC;oBAAI,WAAU;;sCACb,0JAAC;4BAAG,WAAU;sCACX,SAAS,UAAU,QAAQ;;;;;;sCAE9B,0JAAC;4BAAO,SAAS;4BAAS,WAAU;sCAClC,cAAA,0JAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,0JAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;gBAK1E,SAAS,wBACR,0JAAC,mIAAA,CAAA,UAAS;oBAAC,SAAS;;;;;yCAEpB,0JAAC,oIAAA,CAAA,UAAU;oBAAC,SAAS;;;;;;8BAGvB,0JAAC;oBAAI,WAAU;8BACZ,SAAS,wBACR,0JAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,WAAU;kCACX;;;;;6CAID,0JAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAQb;GAjDwB;KAAA"}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/common/Header.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport Link from 'next/link';\r\nimport AuthModal from '../auth/AuthModal';\r\nimport Image from 'next/image';\r\nimport { useRouter } from 'next/router';\r\n\r\nexport default function Header() {\r\n  const router = useRouter();\r\n  const { user, isAuthenticated, logout } = useAuth();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMode, setModalMode] = useState<'login' | 'signup'>('login');\r\n  const isSignupDisabled = true;\r\n\r\n  // 기능별 활성화 상태 관리\r\n  const featureFlags = {\r\n    aiSearch: true,  // AI Search 기능 비활성화\r\n    aiDocument: false // AI Document 기능 비활성화\r\n  };\r\n\r\n  const openModal = (mode: 'login' | 'signup') => {\r\n    setModalMode(mode);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleProtectedLink = (e: React.MouseEvent, path: string) => {\r\n    e.preventDefault();\r\n    \r\n    // 기능별 활성화 상태 체크\r\n    if (path === '/ai-search' && !featureFlags.aiSearch) {\r\n      alert('현재 개발중인 기능입니다.');\r\n      return;\r\n    }\r\n    if (path === '/ai-document' && !featureFlags.aiDocument) {\r\n      alert('현재 개발중인 기능입니다.');\r\n      return;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      alert('로그인을 먼저 해주세요.');\r\n      return;\r\n    }\r\n    router.push(path);\r\n  };\r\n\r\n  const handleSignupClick = () => {\r\n    if (isSignupDisabled) {\r\n      alert('직접 회원가입은 현재 불가능합니다. 관리자에게 문의해 주세요.');\r\n      return;\r\n    }\r\n    openModal('signup');\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    router.push('/');  // 홈으로 리다이렉트\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"fixed w-full bg-white shadow-sm\">\r\n        <div className=\"container mx-auto px-6 py-4\">\r\n          <nav className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center\">\r\n              {/* <Image \r\n                src=\"/images/logos/penguin.jpg\" \r\n                alt=\"Company Logo\" \r\n                width={150} \r\n                height={60} \r\n                className=\"mr-6\"\r\n              /> */}\r\n              <Link href=\"/\" \r\n                 className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\">\r\n                Home\r\n              </Link>\r\n              <div className=\"h-6 w-[2px] bg-gray-300 mx-2\"></div>\r\n              <a href=\"/ai-search\" \r\n                onClick={(e) => handleProtectedLink(e, '/ai-search')}\r\n                className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors cursor-pointer\">\r\n                AI Search\r\n              </a>\r\n              <div className=\"h-6 w-[2px] bg-gray-300 mx-2\"></div>\r\n              <a href=\"/ai-document\" \r\n                onClick={(e) => handleProtectedLink(e, '/ai-document')}\r\n                className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors cursor-pointer\">\r\n                AI Document Automation\r\n              </a>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              {isAuthenticated ? (\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span className=\"text-gray-700\">{user?.username}</span>\r\n                  <button\r\n                    onClick={handleLogout}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    로그아웃\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={() => openModal('login')}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    로그인\r\n                  </button>\r\n                  <button\r\n                    onClick={handleSignupClick}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    회원가입\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n\r\n      <AuthModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        initialMode={modalMode}\r\n      />\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AAEe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,UAAO,AAAD;IAChD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAsB;IAC/D,MAAM,mBAAmB;IAEzB,gBAAgB;IAChB,MAAM,eAAe;QACnB,UAAU;QACV,YAAY,MAAM,sBAAsB;IAC1C;IAEA,MAAM,YAAY,CAAC;QACjB,aAAa;QACb,eAAe;IACjB;IAEA,MAAM,sBAAsB,CAAC,GAAqB;QAChD,EAAE,cAAc;QAEhB,gBAAgB;QAChB,IAAI,SAAS,gBAAgB,CAAC,aAAa,QAAQ,EAAE;YACnD,MAAM;YACN;QACF;QACA,IAAI,SAAS,kBAAkB,CAAC,aAAa,UAAU,EAAE;YACvD,MAAM;YACN;QACF;QAEA,IAAI,CAAC,iBAAiB;YACpB,MAAM;YACN;QACF;QACA,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,oBAAoB;QACxB,wCAAsB;YACpB,MAAM;YACN;QACF;;IAEF;IAEA,MAAM,eAAe;QACnB,MAAM;QACN,OAAO,IAAI,CAAC,MAAO,YAAY;IACjC;IAEA,qBACE;;0BACE,0JAAC;gBAAO,WAAU;0BAChB,cAAA,0JAAC;oBAAI,WAAU;8BACb,cAAA,0JAAC;wBAAI,WAAU;;0CACb,0JAAC;gCAAI,WAAU;;kDAQb,0JAAC,wHAAA,CAAA,UAAI;wCAAC,MAAK;wCACR,WAAU;kDAAwG;;;;;;kDAGrH,0JAAC;wCAAI,WAAU;;;;;;kDACf,0JAAC;wCAAE,MAAK;wCACN,SAAS,CAAC,IAAM,oBAAoB,GAAG;wCACvC,WAAU;kDAAuH;;;;;;kDAGnI,0JAAC;wCAAI,WAAU;;;;;;kDACf,0JAAC;wCAAE,MAAK;wCACN,SAAS,CAAC,IAAM,oBAAoB,GAAG;wCACvC,WAAU;kDAAuH;;;;;;;;;;;;0CAKrI,0JAAC;gCAAI,WAAU;0CACZ,gCACC,0JAAC;oCAAI,WAAU;;sDACb,0JAAC;4CAAK,WAAU;sDAAiB,MAAM;;;;;;sDACvC,0JAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;yDAKH;;sDACE,0JAAC;4CACC,SAAS,IAAM,UAAU;4CACzB,WAAU;sDACX;;;;;;sDAGD,0JAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUb,0JAAC,mIAAA,CAAA,UAAS;gBACR,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,aAAa;;;;;;;;AAIrB;GAzHwB;;QACP,0HAAA,CAAA,YAAS;QACkB,mHAAA,CAAA,UAAO;;;KAF3B"}},
    {"offset": {"line": 1359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1365, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/ai-search/Sidebar.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { useRouter } from 'next/router';\r\n\r\ninterface SidebarProps {\r\n  chats: Array<{id: string, title: string, date: string}>;\r\n  currentChatId: string | null;\r\n  onNewChat: () => void;\r\n  onSelectChat: (chatId: string) => void;\r\n  onUpdateTitle: (chatId: string, newTitle: string) => void;\r\n  onDeleteChat: (chatId: string) => void;\r\n  onDeleteAllChats: () => void;\r\n}\r\n\r\nexport default function Sidebar({ \r\n  chats, \r\n  currentChatId, \r\n  onNewChat, \r\n  onSelectChat,\r\n  onUpdateTitle,\r\n  onDeleteChat,\r\n  onDeleteAllChats \r\n}: SidebarProps) {\r\n  const [editingChatId, setEditingChatId] = useState<string | null>(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const { user } = useAuth();\r\n  const router = useRouter();\r\n  console.log(user);\r\n\r\n  const handleEditStart = (chat: {id: string, title: string}) => {\r\n    setEditingChatId(chat.id);\r\n    setEditTitle(chat.title);\r\n  };\r\n\r\n  const handleEditSubmit = (chatId: string) => {\r\n    if (editTitle.trim()) {\r\n      onUpdateTitle(chatId, editTitle.trim());\r\n    }\r\n    setEditingChatId(null);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent, chatId: string) => {\r\n    if (e.key === 'Enter') {\r\n      handleEditSubmit(chatId);\r\n    } else if (e.key === 'Escape') {\r\n      setEditingChatId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col\">\r\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={onNewChat}\r\n            className=\"flex-1 bg-blue-500 text-white py-3 px-4 rounded-lg hover:bg-blue-600 transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            <PlusIcon />\r\n            새로운 채팅\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm('모든 채팅이 삭제됩니다. 계속하시겠습니까?')) {\r\n                onDeleteAllChats();\r\n              }\r\n            }}\r\n            className=\"bg-red-500 text-white py-3 px-4 rounded-lg hover:bg-red-600 transition-colors flex items-center justify-center\"\r\n          >\r\n            <TrashIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"h-[calc(100vh-24rem)] overflow-y-auto\">\r\n        <div className=\"p-4 space-y-2\">\r\n          {chats.length === 0 ? (\r\n            <div className=\"text-center text-gray-500 dark:text-gray-400 py-4\">\r\n              새로운 채팅을 시작해보세요\r\n            </div>\r\n          ) : (\r\n            chats.map((chat) => (\r\n              <div\r\n                key={chat.id}\r\n                onClick={() => editingChatId !== chat.id && onSelectChat(chat.id)}\r\n                className={`p-3 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg cursor-pointer transition-colors dark:text-gray-200 ${\r\n                  currentChatId === chat.id ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n                }`}\r\n              >\r\n                <div className=\"flex flex-col min-w-0\">\r\n                  <div className=\"flex items-start justify-between group\">\r\n                    {editingChatId === chat.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editTitle}\r\n                        onChange={(e) => setEditTitle(e.target.value)}\r\n                        onBlur={() => handleEditSubmit(chat.id)}\r\n                        onKeyDown={(e) => handleKeyDown(e, chat.id)}\r\n                        className=\"w-full bg-white dark:bg-gray-700 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        autoFocus\r\n                      />\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <div className=\"font-medium truncate\">{chat.title}</div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-0.5\">{chat.date}</div>\r\n                        </div>\r\n                        <div className=\"flex flex-col opacity-0 group-hover:opacity-100 transition-opacity ml-2 space-y-1\">\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleEditStart(chat);\r\n                            }}\r\n                            className=\"p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded\"\r\n                          >\r\n                            <EditIcon />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              if (window.confirm('정말로 이 채팅을 삭제하시겠습니까?')) {\r\n                                onDeleteChat(chat.id);\r\n                              }\r\n                            }}\r\n                            className=\"p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded text-red-500\"\r\n                          >\r\n                            <TrashIcon />\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-auto p-4 border-t border-gray-200 dark:border-gray-700 space-y-2\">\r\n        {user?.username.split('@')[0] === 'admin' && (\r\n          <button \r\n            onClick={() => router.push('/ai-search/document')}\r\n            className=\"w-full py-2 px-4 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex items-center gap-2\"\r\n          >\r\n            <DocumentIcon />\r\n            문서 관리\r\n          </button>\r\n        )}\r\n        <button className=\"w-full py-2 px-4 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex items-center gap-2\">\r\n          <SettingsIcon />\r\n          검색 설정\r\n        </button>\r\n        <button className=\"w-full py-2 px-4 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex items-center gap-2\">\r\n          <InfoIcon />\r\n          검색 정보\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PlusIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n  </svg>\r\n);\r\n\r\nconst SettingsIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\r\n  </svg>\r\n);\r\n\r\nconst InfoIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n    <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n  </svg>\r\n);\r\n\r\nconst EditIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n  </svg>\r\n);\r\n\r\nconst TrashIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M3 6h18\"></path>\r\n    <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n    <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n  </svg>\r\n);\r\n\r\nconst DocumentIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n    <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n    <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"12\"></line>\r\n    <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>\r\n  </svg>\r\n);"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1902, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1908, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/ai-search/ChatInput.tsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\ninterface ChatInputProps {\r\n  onSendMessage: (message: string) => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport default function ChatInput({ onSendMessage, disabled }: ChatInputProps) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (input.trim() && !disabled) {\r\n      onSendMessage(input);\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"max-w-3xl mx-auto w-full\">\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"메시지를 입력하세요...\"\r\n          disabled={disabled}\r\n          className=\"w-full p-4 pr-12 rounded-lg border border-gray-300 dark:border-gray-600 focus:outline-none focus:border-blue-500 disabled:bg-gray-50 disabled:cursor-not-allowed bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-200 dark:placeholder-gray-400\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={disabled}\r\n          className=\"absolute right-2 top-1/2 -translate-y-1/2 p-2 text-blue-500 hover:text-blue-600 disabled:text-gray-400 disabled:cursor-not-allowed\"\r\n        >\r\n          <SendIcon />\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst SendIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n    <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n  </svg>\r\n); "],"names":[],"mappings":";;;;AAAA;;;;AAOe,SAAS,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAkB;;IAC3E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU;YAC7B,cAAc;YACd,SAAS;QACX;IACF;IAEA,qBACE,0JAAC;QAAK,UAAU;QAAc,WAAU;kBACtC,cAAA,0JAAC;YAAI,WAAU;;8BACb,0JAAC;oBACC,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,aAAY;oBACZ,UAAU;oBACV,WAAU;;;;;;8BAEZ,0JAAC;oBACC,MAAK;oBACL,UAAU;oBACV,WAAU;8BAEV,cAAA,0JAAC;;;;;;;;;;;;;;;;;;;;;AAKX;GAhCwB;KAAA;AAkCxB,MAAM,WAAW,kBACf,0JAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,0JAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAI,IAAG;gBAAK,IAAG;;;;;;0BAChC,0JAAC;gBAAQ,QAAO;;;;;;;;;;;;MAHd"}},
    {"offset": {"line": 2013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2019, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/ai-search/ChatMessages.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { Message } from '@/types/chat';\r\n\r\ninterface CodeComponentProps {\r\n  inline?: boolean;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\ninterface ChatMessagesProps {\r\n  messages: Message[];\r\n}\r\n\r\nexport default function ChatMessages({ messages }: ChatMessagesProps) {\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"h-full px-8 py-6\">\r\n      <div className=\"max-w-3xl mx-auto w-full space-y-4\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n              <div className=\"text-4xl mb-4\">💬</div>\r\n              <div className=\"text-xl font-medium\">채팅을 시작하세요</div>\r\n              <div className=\"mt-2\">질문을 입력하시면 AI가 답변해드립니다</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message, index) => (\r\n            <div key={index} className=\"space-y-4\">\r\n              {/* 사용자 메시지 */}\r\n              <div className=\"flex justify-end\">\r\n                <div className=\"max-w-[80%] p-4 rounded-lg bg-blue-500 text-white\">\r\n                  <div className=\"whitespace-pre-wrap\">{message.user}</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* AI 응답 메시지 */}\r\n              {message.assistant && (\r\n                <div className=\"flex justify-start\">\r\n                  <div className=\"max-w-[80%] p-4 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-200\">\r\n                    <ReactMarkdown\r\n                      className=\"prose dark:prose-invert max-w-none\"\r\n                      components={{\r\n                        pre: ({ children }) => (\r\n                          <pre className=\"bg-gray-200 dark:bg-gray-700 p-4 rounded-lg overflow-x-auto\">\r\n                            {children}\r\n                          </pre>\r\n                        ),\r\n                        code: ({ inline, children, className }: CodeComponentProps) => (\r\n                          inline ? (\r\n                            <code className=\"bg-gray-200 dark:bg-gray-700 px-1 rounded text-gray-900 dark:text-gray-100\">\r\n                              {children}\r\n                            </code>\r\n                          ) : (\r\n                            <code className=\"block text-gray-900 dark:text-gray-100\">\r\n                              {children}\r\n                            </code>\r\n                          )\r\n                        ),\r\n                      }}\r\n                    >\r\n                      {message.assistant}\r\n                    </ReactMarkdown>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAae,SAAS,aAAa,EAAE,QAAQ,EAAqB;;IAClE,MAAM,iBAAiB,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG;QAAC;KAAS;IAEb,qBACE,0JAAC;QAAI,WAAU;kBACb,cAAA,0JAAC;YAAI,WAAU;;gBACZ,SAAS,MAAM,KAAK,kBACnB,0JAAC;oBAAI,WAAU;8BACb,cAAA,0JAAC;wBAAI,WAAU;;0CACb,0JAAC;gCAAI,WAAU;0CAAgB;;;;;;0CAC/B,0JAAC;gCAAI,WAAU;0CAAsB;;;;;;0CACrC,0JAAC;gCAAI,WAAU;0CAAO;;;;;;;;;;;;;;;;2BAI1B,SAAS,GAAG,CAAC,CAAC,SAAS,sBACrB,0JAAC;wBAAgB,WAAU;;0CAEzB,0JAAC;gCAAI,WAAU;0CACb,cAAA,0JAAC;oCAAI,WAAU;8CACb,cAAA,0JAAC;wCAAI,WAAU;kDAAuB,QAAQ,IAAI;;;;;;;;;;;;;;;;4BAKrD,QAAQ,SAAS,kBAChB,0JAAC;gCAAI,WAAU;0CACb,cAAA,0JAAC;oCAAI,WAAU;8CACb,cAAA,0JAAC,oLAAA,CAAA,UAAa;wCACZ,WAAU;wCACV,YAAY;4CACV,KAAK,CAAC,EAAE,QAAQ,EAAE,iBAChB,0JAAC;oDAAI,WAAU;8DACZ;;;;;;4CAGL,MAAM,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAsB,GACxD,uBACE,0JAAC;oDAAK,WAAU;8DACb;;;;;2EAGH,0JAAC;oDAAK,WAAU;8DACb;;;;;;wCAIT;kDAEC,QAAQ,SAAS;;;;;;;;;;;;;;;;;uBAjClB;;;;;8BAyCd,0JAAC;oBAAI,KAAK;;;;;;;;;;;;;;;;;AAIlB;GArEwB;KAAA"}},
    {"offset": {"line": 2192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2198, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/ai-search/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Header from '@/components/common/Header';\r\nimport Sidebar from '@/components/ai-search/Sidebar';\r\nimport ChatInput from '@/components/ai-search/ChatInput';\r\nimport ChatMessages from '@/components/ai-search/ChatMessages';\r\nimport { Message, Chat } from '@/types/chat';\r\n\r\nexport default function AISearch() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [currentChatId, setCurrentChatId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const loadChatsFromDB = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('http://localhost:8000/api/ai-search/load-chat', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) throw new Error('Failed to load chats');\r\n        \r\n        const data = await response.json();\r\n        const formattedChats: Chat[] = data.map((chat: any) => ({\r\n          id: chat.chat_id.toString(),\r\n          title: chat.title,\r\n          date: chat.created_at.split('T')[0] + ' ' + chat.created_at.split('T')[1].split('.')[0],\r\n          messages: chat.messages.map((msg: any) => ({\r\n            user: msg.user,\r\n            assistant: msg.assistant,\r\n            doc_ids: msg.doc_ids,\r\n            chunk_ids: msg.chunk_ids\r\n          }))\r\n        }));\r\n\r\n        setChats(formattedChats);\r\n        \r\n        if (formattedChats.length > 0) {\r\n          setCurrentChatId(formattedChats[0].id);\r\n          setMessages(formattedChats[0].messages);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading chats:', error);\r\n      }\r\n    };\r\n\r\n    loadChatsFromDB();\r\n  }, []);\r\n\r\n  const createNewChat = async (initialMessage?: string) => {\r\n    try {\r\n      if (chats.length >= 50) {\r\n        alert('채팅은 최대 50개까지만 생성할 수 있습니다. 기존 채팅을 삭제해 주세요.');\r\n        return null;\r\n      }\r\n\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:8000/api/ai-search/save-chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          title: initialMessage?.slice(0, 30) || '새로운 채팅',\r\n          messages: []\r\n        })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to save chat');\r\n      \r\n      const data = await response.json();\r\n      const newChat: Chat = {\r\n        id: data.chat_id.toString(),\r\n        title: initialMessage?.slice(0, 30) || '새로운 채팅',\r\n        date: data.created_at.split('T')[0] + ' ' + data.created_at.split('T')[1].split('.')[0],\r\n        messages: []\r\n      };\r\n\r\n      setChats(prev => [newChat, ...prev]);\r\n      setCurrentChatId(newChat.id);\r\n      setMessages([]);\r\n      return newChat.id;\r\n    } catch (error) {\r\n      console.error('Error creating chat:', error);\r\n      alert('채팅 생성에 실패했습니다.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const updateChatMessages = (chatId: string, newMessages: Message[]) => {\r\n    setChats(prev => prev.map(chat => \r\n      chat.id === chatId \r\n        ? { ...chat, messages: newMessages }\r\n        : chat\r\n    ));\r\n  };\r\n\r\n  const handleSendMessage = async (message: string) => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      if (!currentChatId) {\r\n        const newChatId = await createNewChat(message);\r\n        if (!newChatId) {\r\n          throw new Error('Failed to create new chat');\r\n        }\r\n        setCurrentChatId(newChatId);\r\n      }\r\n\r\n      const newMessage: Message = { user: message };\r\n      const updatedMessages = [...messages, newMessage];\r\n      setMessages(updatedMessages);\r\n      updateChatMessages(currentChatId!, updatedMessages);\r\n\r\n      const response = await fetch('http://localhost:8000/api/ai-search/stream-chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'text/event-stream',\r\n        },\r\n        body: JSON.stringify({ \r\n          chat_id: parseInt(currentChatId!),\r\n          messages: updatedMessages\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n      \r\n      const reader = response.body?.getReader();\r\n      if (!reader) throw new Error('Reader not available');\r\n\r\n      let fullContent = '';\r\n      let doc_ids: number[] | null = null;\r\n      let chunk_ids: string[] | null = null;\r\n      let isParsingMetadata = false;\r\n      let metadataBuffer = '';\r\n      \r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n        \r\n        const text = new TextDecoder().decode(value);\r\n        \r\n        for (const char of text) {\r\n          if (char === '|') {\r\n            isParsingMetadata = true;\r\n            metadataBuffer = '';\r\n            continue;\r\n          }\r\n          \r\n          if (isParsingMetadata) {\r\n            metadataBuffer += char;\r\n          } else {\r\n            fullContent += char;\r\n          }\r\n        }\r\n        \r\n        if (!isParsingMetadata) {\r\n          const latestMessages = updatedMessages.map((msg, idx) => \r\n            idx === updatedMessages.length - 1 \r\n              ? { ...msg, assistant: fullContent }\r\n              : msg\r\n          );\r\n          setMessages(latestMessages);\r\n          updateChatMessages(currentChatId!, latestMessages);\r\n        }\r\n      }\r\n\r\n      // 스트리밍이 끝난 후\r\n      // 메타데이터 파싱\r\n      console.log('metadataBuffer:', metadataBuffer);\r\n      const metadataParts = metadataBuffer.split('</s>');\r\n      console.log('metadataParts:', metadataParts);\r\n\r\n      for (const part of metadataParts) {\r\n        if (part.startsWith('doc_ids=')) {\r\n          const ids = part.replace('doc_ids=', '').split(',');\r\n          doc_ids = ids.length === 0 || ids.some(id => isNaN(parseInt(id.trim())))\r\n            ? null \r\n            : ids.map(id => parseInt(id.trim()));\r\n        } else if (part.startsWith('chunk_ids=')) {\r\n          const ids = part.replace('chunk_ids=', '').split(',');\r\n          chunk_ids = ids.length === 0 || ids[0] === ''\r\n            ? null\r\n            : ids.map(id => id.trim());\r\n        }\r\n      }\r\n\r\n      console.log('Parsed IDs:', { doc_ids, chunk_ids });\r\n\r\n      // 메타데이터 파싱 후 최종 메시지 업데이트\r\n      const finalMessages = updatedMessages.map((msg, idx) => \r\n        idx === updatedMessages.length - 1 \r\n          ? { \r\n              ...msg, \r\n              assistant: fullContent,\r\n              doc_ids: doc_ids,\r\n              chunk_ids: chunk_ids\r\n            }\r\n          : msg\r\n      );\r\n      setMessages(finalMessages);\r\n      updateChatMessages(currentChatId!, finalMessages);\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('서버에 연결할 수 없습니다. 관리자에게 문의하세요.');\r\n      const revertedMessages = messages.slice(0, -1);\r\n      setMessages(revertedMessages);\r\n      if (currentChatId) {\r\n        updateChatMessages(currentChatId, revertedMessages);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateChatTitle = async (chatId: string, newTitle: string) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:8000/api/ai-search/update-chat-title', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          chat_id: parseInt(chatId),\r\n          title: newTitle\r\n        })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to update chat title');\r\n\r\n      setChats(prev => prev.map(chat => \r\n        chat.id === chatId \r\n          ? { ...chat, title: newTitle }\r\n          : chat\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error updating chat title:', error);\r\n      alert('채팅 제목 변경에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleSelectChat = (chatId: string) => {\r\n    setCurrentChatId(chatId);\r\n    const selectedChat = chats.find(chat => chat.id === chatId);\r\n    if (selectedChat) {\r\n      setMessages(selectedChat.messages);\r\n    }\r\n  };\r\n\r\n  const handleDeleteChat = async (chatId: string) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:8000/api/ai-search/delete-chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          chat_id: parseInt(chatId)\r\n        })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to delete chat');\r\n\r\n      setChats(prev => prev.filter(chat => chat.id !== chatId));\r\n      if (currentChatId === chatId) {\r\n        setCurrentChatId(null);\r\n        setMessages([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting chat:', error);\r\n      alert('채팅 삭제에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteAllChats = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:8000/api/ai-search/delete-all-chats', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to delete all chats');\r\n\r\n      setChats([]);\r\n      setCurrentChatId(null);\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error('Error deleting all chats:', error);\r\n      alert('채팅 삭제에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-white dark:bg-gray-900\">\r\n      <Header />\r\n      \r\n      <div className=\"flex flex-1 pt-28\">\r\n        <div className=\"w-72 bg-gray-50 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700\">\r\n          <Sidebar \r\n            chats={chats}\r\n            currentChatId={currentChatId}\r\n            onNewChat={() => createNewChat()}\r\n            onSelectChat={handleSelectChat}\r\n            onUpdateTitle={updateChatTitle}\r\n            onDeleteChat={handleDeleteChat}\r\n            onDeleteAllChats={handleDeleteAllChats}\r\n          />\r\n        </div>\r\n        \r\n        <main className=\"flex-1 flex flex-col h-[calc(100vh-7rem)]\">\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <ChatMessages messages={messages} />\r\n          </div>\r\n          \r\n          <div className=\"px-8 py-6 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900\">\r\n            <ChatInput onSendMessage={handleSendMessage} disabled={isLoading} />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2575, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/ai-search\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0]}},
    {"offset": {"line": 2591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}