{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\r\n\r\nexport default function Document() {\r\n  return (\r\n    <Html lang=\"ko\">\r\n      <Head>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          as=\"style\"\r\n          href=\"https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/static/pretendard.css\"\r\n        />\r\n      </Head>\r\n      <body>\r\n        <Main />\r\n        <NextScript />\r\n      </body>\r\n    </Html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;0BACH,cAAA,qKAAC;oBACC,KAAI;oBACJ,IAAG;oBACH,MAAK;;;;;;;;;;;0BAGT,qKAAC;;kCACC,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  signup: (email: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // 백엔드의 토큰 검증 API 호출\r\n      fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Invalid token');\r\n      })\r\n      .then(userData => {\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', email);  // OAuth2는 'username'을 사용\r\n      formData.append('password', password);\r\n\r\n      const response = await fetch('http://localhost:8000/api/auth/login', {\r\n        method: 'POST',\r\n        body: formData,  // JSON 대신 FormData 사용\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        if (error.detail === \"Incorrect email or password\") {\r\n          throw new Error('이메일 또는 비밀번호가 잘못되었습니다');\r\n        }\r\n        throw new Error('로그인 실패');\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.access_token);\r\n      \r\n      // 사용자 정보 가져오기\r\n      const userResponse = await fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${data.access_token}`\r\n        }\r\n      });\r\n\r\n      if (userResponse.ok) {\r\n        const userData = await userResponse.json();\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const signup = async (email: string, password: string) => {\r\n    // 이메일 유효성 검사\r\n    if (email.length > 100) {\r\n      throw new Error('이메일은 100자를 초과할 수 없습니다');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n          is_active: true\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        if (error.detail === \"Email already registered\") {\r\n          throw new Error('같은 아이디가 존재합니다');\r\n        }\r\n        throw new Error('회원가입 실패');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return React.createElement(AuthContext.Provider, \r\n    { value: { user, isAuthenticated, login, logout, signup } },\r\n    children\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;AAAA;;AAgBA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA0B;AAEnD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,oBAAoB;YACpB,MAAM,qCAAqC;gBACzC,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;YACF,GACC,IAAI,CAAC,CAAA;gBACJ,IAAI,SAAS,EAAE,EAAE;oBACf,OAAO,SAAS,IAAI;gBACtB;gBACA,MAAM,IAAI,MAAM;YAClB,GACC,IAAI,CAAC,CAAA;gBACJ,QAAQ;gBACR,mBAAmB;YACrB,GACC,KAAK,CAAC;gBACL,aAAa,UAAU,CAAC;gBACxB,QAAQ;gBACR,mBAAmB;YACrB;QACF;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,YAAY,QAAS,yBAAyB;YAC9D,SAAS,MAAM,CAAC,YAAY;YAE5B,MAAM,WAAW,MAAM,MAAM,wCAAwC;gBACnE,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,IAAI,MAAM,MAAM,KAAK,+BAA+B;oBAClD,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,aAAa,OAAO,CAAC,SAAS,KAAK,YAAY;YAE/C,cAAc;YACd,MAAM,eAAe,MAAM,MAAM,qCAAqC;gBACpE,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,KAAK,YAAY,EAAE;gBAChD;YACF;YAEA,IAAI,aAAa,EAAE,EAAE;gBACnB,MAAM,WAAW,MAAM,aAAa,IAAI;gBACxC,QAAQ;gBACR,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,mBAAmB;IACrB;IAEA,MAAM,SAAS,OAAO,OAAe;QACnC,aAAa;QACb,IAAI,MAAM,MAAM,GAAG,KAAK;YACtB,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,yCAAyC;gBACpE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA,WAAW;gBACb;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,IAAI,MAAM,MAAM,KAAK,4BAA4B;oBAC/C,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,MAAM,SAAS,IAAI;QAC5B,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,MAAM;QACR;IACF;IAEA,qBAAO,mGAAA,CAAA,UAAK,CAAC,aAAa,CAAC,YAAY,QAAQ,EAC7C;QAAE,OAAO;YAAE;YAAM;YAAiB;YAAO;YAAQ;QAAO;IAAE,GAC1D;AAEJ;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\r\nimport type { AppProps } from \"next/app\";\r\nimport { AuthProvider } from '@/hooks/useAuth';\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <AuthProvider>\r\n      <Component {...pageProps} />\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,gHAAA,CAAA,eAAY;kBACX,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/LoginForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface LoginFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function LoginForm({ onClose }: LoginFormProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      await login(email, password);\r\n      onClose();\r\n    } catch (err: any) {\r\n      if (err.message.includes('not found')) {\r\n        setError('아이디가 존재하지 않습니다');\r\n      } else if (err.message.includes('password')) {\r\n        setError('비밀번호 오류입니다');\r\n      } else {\r\n        setError('로그인 중 오류가 발생했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">비밀번호</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n          required\r\n        />\r\n      </div>\r\n      {error && (\r\n        <div className=\"text-red-500 text-sm\">{error}</div>\r\n      )}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors\"\r\n      >\r\n        로그인\r\n      </button>\r\n    </form>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMe,SAAS,UAAU,EAAE,OAAO,EAAkB;IAC3D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAExB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,IAAI;YACF,MAAM,MAAM,OAAO;YACnB;QACF,EAAE,OAAO,KAAU;YACjB,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,cAAc;gBACrC,SAAS;YACX,OAAO,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa;gBAC3C,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,qBACE,qKAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,qKAAC;;kCACC,qKAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,qKAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;wBACV,QAAQ;;;;;;;;;;;;0BAGZ,qKAAC;;kCACC,qKAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,qKAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,WAAU;wBACV,QAAQ;;;;;;;;;;;;YAGX,uBACC,qKAAC;gBAAI,WAAU;0BAAwB;;;;;;0BAEzC,qKAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/SignupForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface SignupFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function SignupForm({ onClose }: SignupFormProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const { signup } = useAuth();\r\n\r\n  const validateEmail = (email: string) => {\r\n    if (email.length > 100) {\r\n      return '이메일은 100자를 초과할 수 없습니다';\r\n    }\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      return '유효한 이메일 주소를 입력해주세요';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    // 이메일 유효성 검사\r\n    const emailError = validateEmail(email);\r\n    if (emailError) {\r\n      setError(emailError);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await signup(email, password);\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 2000);\r\n    } catch (err: any) {\r\n      if (err.message.includes('같은 아이디가 존재합니다')) {\r\n        setError('같은 아이디가 존재합니다');\r\n        setEmail('');\r\n        setPassword('');\r\n      } else if (err.message.includes('100자를 초과')) {\r\n        setError('이메일은 100자를 초과할 수 없습니다');\r\n      } else {\r\n        setError('회원가입 중 오류가 발생했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      {success ? (\r\n        <div className=\"text-green-500 text-center py-4\">\r\n          회원가입이 완료되었습니다!\r\n          <br />\r\n          로그인 해주세요.\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              maxLength={100}\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n              required\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">최대 100자</p>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">비밀번호</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n              required\r\n            />\r\n          </div>\r\n          {error && (\r\n            <div className=\"text-red-500 text-sm\">{error}</div>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors\"\r\n          >\r\n            회원가입\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMe,SAAS,WAAW,EAAE,OAAO,EAAmB;IAC7D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAEzB,MAAM,gBAAgB,CAAC;QACrB,IAAI,MAAM,MAAM,GAAG,KAAK;YACtB,OAAO;QACT;QACA,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAC3B,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,aAAa;QACb,MAAM,aAAa,cAAc;QACjC,IAAI,YAAY;YACd,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,OAAO,OAAO;YACpB,WAAW;YACX,WAAW;gBACT;YACF,GAAG;QACL,EAAE,OAAO,KAAU;YACjB,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB;gBACzC,SAAS;gBACT,SAAS;gBACT,YAAY;YACd,OAAO,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa;gBAC3C,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,qBACE,qKAAC;QAAK,UAAU;QAAc,WAAU;kBACrC,wBACC,qKAAC;YAAI,WAAU;;gBAAkC;8BAE/C,qKAAC;;;;;gBAAK;;;;;;iCAIR;;8BACE,qKAAC;;sCACC,qKAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAC3D,qKAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAW;4BACX,WAAU;4BACV,QAAQ;;;;;;sCAEV,qKAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;8BAE5C,qKAAC;;sCACC,qKAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAC3D,qKAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;;gBAGX,uBACC,qKAAC;oBAAI,WAAU;8BAAwB;;;;;;8BAEzC,qKAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;AAOX"}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/AuthModal.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport SignupForm from '../auth/SignupForm';\r\n\r\ninterface AuthModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  initialMode?: 'login' | 'signup';\r\n}\r\n\r\nexport default function AuthModal({ isOpen, onClose, initialMode = 'login' }: AuthModalProps) {\r\n  useEffect(() => {\r\n    setMode(initialMode);\r\n  }, [initialMode]);\r\n\r\n  const [mode, setMode] = useState<'login' | 'signup'>(initialMode);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-semibold\">\r\n            {mode === 'login' ? '로그인' : '회원가입'}\r\n          </h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {mode === 'login' ? (\r\n          <LoginForm onClose={onClose} />\r\n        ) : (\r\n          <SignupForm onClose={onClose} />\r\n        )}\r\n\r\n        <div className=\"mt-4 text-center\">\r\n          {mode === 'login' ? (\r\n            <button\r\n              onClick={() => setMode('signup')}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              계정이 없으신가요? 회원가입\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => setMode('login')}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              이미 계정이 있으신가요? 로그인\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAQe,SAAS,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,OAAO,EAAkB;IAC1F,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ;IACV,GAAG;QAAC;KAAY;IAEhB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAsB;IAErD,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCACX,SAAS,UAAU,QAAQ;;;;;;sCAE9B,qKAAC;4BAAO,SAAS;4BAAS,WAAU;sCAClC,cAAA,qKAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,qKAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;gBAK1E,SAAS,wBACR,qKAAC,gIAAA,CAAA,UAAS;oBAAC,SAAS;;;;;yCAEpB,qKAAC,iIAAA,CAAA,UAAU;oBAAC,SAAS;;;;;;8BAGvB,qKAAC;oBAAI,WAAU;8BACZ,SAAS,wBACR,qKAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,WAAU;kCACX;;;;;6CAID,qKAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAQb"}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/common/Header.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport Link from 'next/link';\r\nimport AuthModal from '../auth/AuthModal';\r\n\r\nexport default function Header() {\r\n  const { user, isAuthenticated, logout } = useAuth();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMode, setModalMode] = useState<'login' | 'signup'>('login');\r\n\r\n  const openModal = (mode: 'login' | 'signup') => {\r\n    setModalMode(mode);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"fixed w-full bg-white shadow-sm\">\r\n        <div className=\"container mx-auto px-6 py-4\">\r\n          <nav className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center\">\r\n              <Link href=\"/\" \r\n                 className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\">\r\n                Home\r\n              </Link>\r\n              <div className=\"h-6 w-[2px] bg-gray-300 mx-2\"></div>\r\n              <Link href=\"/ai-search\" \r\n                className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\">\r\n                AI Search\r\n              </Link>\r\n              <div className=\"h-6 w-[2px] bg-gray-300 mx-2\"></div>\r\n              <Link href=\"/ai-document\" \r\n                className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\">\r\n                AI Document Automation\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              {isAuthenticated ? (\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span className=\"text-gray-700\">{user?.name}</span>\r\n                  <button\r\n                    onClick={logout}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    로그아웃\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={() => openModal('login')}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    로그인\r\n                  </button>\r\n                  <button\r\n                    onClick={() => openModal('signup')}\r\n                    className=\"bg-blue-500 text-white font-medium px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\"\r\n                  >\r\n                    회원가입\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n\r\n      <AuthModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        initialMode={modalMode}\r\n      />\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAChD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAsB;IAE/D,MAAM,YAAY,CAAC;QACjB,aAAa;QACb,eAAe;IACjB;IAEA,qBACE;;0BACE,qKAAC;gBAAO,WAAU;0BAChB,cAAA,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAI,WAAU;;kDACb,qKAAC,qHAAA,CAAA,UAAI;wCAAC,MAAK;wCACR,WAAU;kDAAwG;;;;;;kDAGrH,qKAAC;wCAAI,WAAU;;;;;;kDACf,qKAAC,qHAAA,CAAA,UAAI;wCAAC,MAAK;wCACT,WAAU;kDAAwG;;;;;;kDAGpH,qKAAC;wCAAI,WAAU;;;;;;kDACf,qKAAC,qHAAA,CAAA,UAAI;wCAAC,MAAK;wCACT,WAAU;kDAAwG;;;;;;;;;;;;0CAKtH,qKAAC;gCAAI,WAAU;0CACZ,gCACC,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAK,WAAU;sDAAiB,MAAM;;;;;;sDACvC,qKAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;yDAKH;;sDACE,qKAAC;4CACC,SAAS,IAAM,UAAU;4CACzB,WAAU;sDACX;;;;;;sDAGD,qKAAC;4CACC,SAAS,IAAM,UAAU;4CACzB,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUb,qKAAC,gIAAA,CAAA,UAAS;gBACR,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,aAAa;;;;;;;;AAIrB"}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/ai-search/Sidebar.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\ninterface SidebarProps {\r\n  chats: Array<{id: string, title: string, date: string}>;\r\n  currentChatId: string | null;\r\n  onNewChat: () => void;\r\n  onSelectChat: (chatId: string) => void;\r\n  onUpdateTitle: (chatId: string, newTitle: string) => void;\r\n}\r\n\r\nexport default function Sidebar({ \r\n  chats, \r\n  currentChatId, \r\n  onNewChat, \r\n  onSelectChat,\r\n  onUpdateTitle \r\n}: SidebarProps) {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [editingChatId, setEditingChatId] = useState<string | null>(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const handleEditStart = (chat: {id: string, title: string}) => {\r\n    setEditingChatId(chat.id);\r\n    setEditTitle(chat.title);\r\n  };\r\n\r\n  const handleEditSubmit = (chatId: string) => {\r\n    if (editTitle.trim()) {\r\n      onUpdateTitle(chatId, editTitle.trim());\r\n    }\r\n    setEditingChatId(null);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent, chatId: string) => {\r\n    if (e.key === 'Enter') {\r\n      handleEditSubmit(chatId);\r\n    } else if (e.key === 'Escape') {\r\n      setEditingChatId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900\">\r\n      <div className=\"p-4\">\r\n        <button\r\n          onClick={onNewChat}\r\n          className=\"w-full bg-blue-500 text-white py-3 px-4 rounded-lg hover:bg-blue-600 transition-colors flex items-center justify-center gap-2\"\r\n        >\r\n          <PlusIcon />\r\n          새로운 채팅\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"overflow-y-auto p-4 space-y-2 max-h-[40rem]\">\r\n        {chats.length === 0 ? (\r\n          <div className=\"text-center text-gray-500 dark:text-gray-400 py-4\">\r\n            새로운 채팅을 시작해보세요\r\n          </div>\r\n        ) : (\r\n          chats.map((chat) => (\r\n            <div\r\n              key={chat.id}\r\n              onClick={() => editingChatId !== chat.id && onSelectChat(chat.id)}\r\n              className={`p-3 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg cursor-pointer transition-colors dark:text-gray-200 ${\r\n                currentChatId === chat.id ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center justify-between group\">\r\n                {editingChatId === chat.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editTitle}\r\n                    onChange={(e) => setEditTitle(e.target.value)}\r\n                    onBlur={() => handleEditSubmit(chat.id)}\r\n                    onKeyDown={(e) => handleKeyDown(e, chat.id)}\r\n                    className=\"w-full bg-white dark:bg-gray-700 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    autoFocus\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <div className=\"font-medium truncate flex-grow\">{chat.title}</div>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleEditStart(chat);\r\n                      }}\r\n                      className=\"ml-2 p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                    >\r\n                      <svg \r\n                        xmlns=\"http://www.w3.org/2000/svg\" \r\n                        fill=\"none\" \r\n                        viewBox=\"0 0 24 24\" \r\n                        strokeWidth={1.5} \r\n                        stroke=\"currentColor\" \r\n                        className=\"w-4 h-4\"\r\n                      >\r\n                        <path \r\n                          strokeLinecap=\"round\" \r\n                          strokeLinejoin=\"round\" \r\n                          d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" \r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">{chat.date}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mt-auto p-4 border-t border-gray-200 dark:border-gray-700 space-y-2\">\r\n        <button \r\n          onClick={() => setIsDarkMode(!isDarkMode)}\r\n          className=\"w-full py-2 px-4 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex items-center gap-2\"\r\n        >\r\n          {isDarkMode ? <SunIcon /> : <MoonIcon />}\r\n          {isDarkMode ? '라이트 모드' : '다크 모드'}\r\n        </button>\r\n        <button className=\"w-full py-2 px-4 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex items-center gap-2\">\r\n          <SettingsIcon />\r\n          검색 설정\r\n        </button>\r\n        <button className=\"w-full py-2 px-4 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors flex items-center gap-2\">\r\n          <InfoIcon />\r\n          검색 정보\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PlusIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n  </svg>\r\n);\r\n\r\nconst SettingsIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\r\n  </svg>\r\n);\r\n\r\nconst InfoIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n    <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n  </svg>\r\n);\r\n\r\nconst MoonIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\r\n  </svg>\r\n);\r\n\r\nconst SunIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\r\n    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\r\n    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\r\n    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\r\n    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\r\n    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\r\n    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\r\n    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\r\n    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\r\n  </svg>\r\n);\r\n\r\nconst EditIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n  </svg>\r\n); "],"names":[],"mappings":";;;;AAAA;;;AAUe,SAAS,QAAQ,EAC9B,KAAK,EACL,aAAa,EACb,SAAS,EACT,YAAY,EACZ,aAAa,EACA;IACb,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY;YACd,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,kBAAkB,CAAC;QACvB,iBAAiB,KAAK,EAAE;QACxB,aAAa,KAAK,KAAK;IACzB;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,UAAU,IAAI,IAAI;YACpB,cAAc,QAAQ,UAAU,IAAI;QACtC;QACA,iBAAiB;IACnB;IAEA,MAAM,gBAAgB,CAAC,GAAwB;QAC7C,IAAI,EAAE,GAAG,KAAK,SAAS;YACrB,iBAAiB;QACnB,OAAO,IAAI,EAAE,GAAG,KAAK,UAAU;YAC7B,iBAAiB;QACnB;IACF;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBACC,SAAS;oBACT,WAAU;;sCAEV,qKAAC;;;;;wBAAW;;;;;;;;;;;;0BAKhB,qKAAC;gBAAI,WAAU;0BACZ,MAAM,MAAM,KAAK,kBAChB,qKAAC;oBAAI,WAAU;8BAAoD;;;;;2BAInE,MAAM,GAAG,CAAC,CAAC,qBACT,qKAAC;wBAEC,SAAS,IAAM,kBAAkB,KAAK,EAAE,IAAI,aAAa,KAAK,EAAE;wBAChE,WAAW,CAAC,4GAA4G,EACtH,kBAAkB,KAAK,EAAE,GAAG,iCAAiC,IAC7D;;0CAEF,qKAAC;gCAAI,WAAU;0CACZ,kBAAkB,KAAK,EAAE,iBACxB,qKAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;oCAC5C,QAAQ,IAAM,iBAAiB,KAAK,EAAE;oCACtC,WAAW,CAAC,IAAM,cAAc,GAAG,KAAK,EAAE;oCAC1C,WAAU;oCACV,SAAS;;;;;yDAGX;;sDACE,qKAAC;4CAAI,WAAU;sDAAkC,KAAK,KAAK;;;;;;sDAC3D,qKAAC;4CACC,SAAS,CAAC;gDACR,EAAE,eAAe;gDACjB,gBAAgB;4CAClB;4CACA,WAAU;sDAEV,cAAA,qKAAC;gDACC,OAAM;gDACN,MAAK;gDACL,SAAQ;gDACR,aAAa;gDACb,QAAO;gDACP,WAAU;0DAEV,cAAA,qKAAC;oDACC,eAAc;oDACd,gBAAe;oDACf,GAAE;;;;;;;;;;;;;;;;;;;;;;;0CAOd,qKAAC;gCAAI,WAAU;0CAA4C,KAAK,IAAI;;;;;;;uBA7C/D,KAAK,EAAE;;;;;;;;;;0BAmDpB,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBACC,SAAS,IAAM,cAAc,CAAC;wBAC9B,WAAU;;4BAET,2BAAa,qKAAC;;;;qDAAa,qKAAC;;;;;4BAC5B,aAAa,WAAW;;;;;;;kCAE3B,qKAAC;wBAAO,WAAU;;0CAChB,qKAAC;;;;;4BAAe;;;;;;;kCAGlB,qKAAC;wBAAO,WAAU;;0CAChB,qKAAC;;;;;4BAAW;;;;;;;;;;;;;;;;;;;AAMtB;AAEA,MAAM,WAAW,kBACf,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAI,IAAG;gBAAK,IAAG;;;;;;0BAChC,qKAAC;gBAAK,IAAG;gBAAI,IAAG;gBAAK,IAAG;gBAAK,IAAG;;;;;;;;;;;;AAIpC,MAAM,eAAe,kBACnB,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,qKAAC;gBAAO,IAAG;gBAAK,IAAG;gBAAK,GAAE;;;;;;0BAC1B,qKAAC;gBAAK,GAAE;;;;;;;;;;;;AAIZ,MAAM,WAAW,kBACf,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,qKAAC;gBAAO,IAAG;gBAAK,IAAG;gBAAK,GAAE;;;;;;0BAC1B,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAK,IAAG;gBAAK,IAAG;;;;;;0BACjC,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAI,IAAG;gBAAQ,IAAG;;;;;;;;;;;;AAIvC,MAAM,WAAW,kBACf,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;kBACxK,cAAA,qKAAC;YAAK,GAAE;;;;;;;;;;;AAIZ,MAAM,UAAU,kBACd,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,qKAAC;gBAAO,IAAG;gBAAK,IAAG;gBAAK,GAAE;;;;;;0BAC1B,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAI,IAAG;gBAAK,IAAG;;;;;;0BAChC,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAK,IAAG;gBAAK,IAAG;;;;;;0BACjC,qKAAC;gBAAK,IAAG;gBAAO,IAAG;gBAAO,IAAG;gBAAO,IAAG;;;;;;0BACvC,qKAAC;gBAAK,IAAG;gBAAQ,IAAG;gBAAQ,IAAG;gBAAQ,IAAG;;;;;;0BAC1C,qKAAC;gBAAK,IAAG;gBAAI,IAAG;gBAAK,IAAG;gBAAI,IAAG;;;;;;0BAC/B,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAK,IAAG;gBAAK,IAAG;;;;;;0BACjC,qKAAC;gBAAK,IAAG;gBAAO,IAAG;gBAAQ,IAAG;gBAAO,IAAG;;;;;;0BACxC,qKAAC;gBAAK,IAAG;gBAAQ,IAAG;gBAAO,IAAG;gBAAQ,IAAG;;;;;;;;;;;;AAI7C,MAAM,WAAW,kBACf,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,qKAAC;gBAAK,GAAE;;;;;;0BACR,qKAAC;gBAAK,GAAE"}},
    {"offset": {"line": 1341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1347, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/ai-search/ChatInput.tsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\ninterface ChatInputProps {\r\n  onSendMessage: (message: string) => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport default function ChatInput({ onSendMessage, disabled }: ChatInputProps) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (input.trim() && !disabled) {\r\n      onSendMessage(input);\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"max-w-3xl mx-auto w-full\">\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"메시지를 입력하세요...\"\r\n          disabled={disabled}\r\n          className=\"w-full p-4 pr-12 rounded-lg border border-gray-300 dark:border-gray-600 focus:outline-none focus:border-blue-500 disabled:bg-gray-50 disabled:cursor-not-allowed bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-200 dark:placeholder-gray-400\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={disabled}\r\n          className=\"absolute right-2 top-1/2 -translate-y-1/2 p-2 text-blue-500 hover:text-blue-600 disabled:text-gray-400 disabled:cursor-not-allowed\"\r\n        >\r\n          <SendIcon />\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst SendIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n    <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n  </svg>\r\n); "],"names":[],"mappings":";;;;AAAA;;;AAOe,SAAS,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAkB;IAC3E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU;YAC7B,cAAc;YACd,SAAS;QACX;IACF;IAEA,qBACE,qKAAC;QAAK,UAAU;QAAc,WAAU;kBACtC,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBACC,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,aAAY;oBACZ,UAAU;oBACV,WAAU;;;;;;8BAEZ,qKAAC;oBACC,MAAK;oBACL,UAAU;oBACV,WAAU;8BAEV,cAAA,qKAAC;;;;;;;;;;;;;;;;;;;;;AAKX;AAEA,MAAM,WAAW,kBACf,qKAAC;QAAI,OAAM;QAA6B,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAY,MAAK;QAAO,QAAO;QAAe,aAAY;QAAI,eAAc;QAAQ,gBAAe;;0BACxK,qKAAC;gBAAK,IAAG;gBAAK,IAAG;gBAAI,IAAG;gBAAK,IAAG;;;;;;0BAChC,qKAAC;gBAAQ,QAAO"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1447, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/ai-search/ChatMessages.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport type { ComponentPropsWithoutRef } from 'react';\r\n\r\ninterface CodeProps extends ComponentPropsWithoutRef<'code'> {\r\n  inline?: boolean;\r\n}\r\n\r\ninterface ChatMessagesProps {\r\n  messages: Array<{\r\n    role: 'user' | 'assistant';\r\n    content: string;\r\n  }>;\r\n}\r\n\r\nexport default function ChatMessages({ messages }: ChatMessagesProps) {\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"h-full px-4 py-4\">\r\n      <div className=\"max-w-3xl mx-auto w-full space-y-4\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n              <div className=\"text-4xl mb-4\">💬</div>\r\n              <div className=\"text-xl font-medium\">채팅을 시작하세요</div>\r\n              <div className=\"mt-2\">질문을 입력하시면 AI가 답변해드립니다</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\r\n            >\r\n              <div\r\n                className={`max-w-[80%] p-4 rounded-lg whitespace-pre-wrap ${\r\n                  message.role === 'user'\r\n                    ? 'bg-blue-500 text-white'\r\n                    : 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-200'\r\n                }`}\r\n              >\r\n                {message.content}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;;;AAce,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAClE,MAAM,iBAAiB,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAS;IAEb,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;gBACZ,SAAS,MAAM,KAAK,kBACnB,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAI,WAAU;0CAAgB;;;;;;0CAC/B,qKAAC;gCAAI,WAAU;0CAAsB;;;;;;0CACrC,qKAAC;gCAAI,WAAU;0CAAO;;;;;;;;;;;;;;;;2BAI1B,SAAS,GAAG,CAAC,CAAC,SAAS,sBACrB,qKAAC;wBAEC,WAAW,CAAC,KAAK,EAAE,QAAQ,IAAI,KAAK,SAAS,gBAAgB,iBAAiB;kCAE9E,cAAA,qKAAC;4BACC,WAAW,CAAC,+CAA+C,EACzD,QAAQ,IAAI,KAAK,SACb,2BACA,iEACJ;sCAED,QAAQ,OAAO;;;;;;uBAVb;;;;;8BAeX,qKAAC;oBAAI,KAAK;;;;;;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 1544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1550, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/ai-search/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Header from '@/components/common/Header';\r\nimport Sidebar from '@/components/ai-search/Sidebar';\r\nimport ChatInput from '@/components/ai-search/ChatInput';\r\nimport ChatMessages from '@/components/ai-search/ChatMessages';\r\n\r\ninterface Message {\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n}\r\n\r\ninterface Chat {\r\n  id: string;\r\n  title: string;\r\n  date: string;\r\n  messages: Message[];\r\n}\r\n\r\nexport default function AISearch() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [currentChatId, setCurrentChatId] = useState<string | null>(null);\r\n\r\n  // 로컬 스토리지에서 채팅 데이터 로드\r\n  useEffect(() => {\r\n    const savedChats = localStorage.getItem('chats');\r\n    if (savedChats) {\r\n      setChats(JSON.parse(savedChats) as Chat[]);\r\n    }\r\n  }, []);\r\n\r\n  // 채팅 데이터가 변경될 때마다 로컬 스토리지에 저장\r\n  useEffect(() => {\r\n    localStorage.setItem('chats', JSON.stringify(chats));\r\n  }, [chats]);\r\n\r\n  // 현재 채팅이 변경될 때 해당 채팅의 메시지 로드\r\n  useEffect(() => {\r\n    if (currentChatId) {\r\n      const currentChat = chats.find(chat => chat.id === currentChatId);\r\n      if (currentChat) {\r\n        setMessages(currentChat.messages);\r\n      }\r\n    } else {\r\n      setMessages([]);\r\n    }\r\n  }, [currentChatId, chats]);\r\n\r\n  const createNewChat = (initialMessage?: string) => {\r\n    const newChat: Chat = {\r\n      id: Date.now().toString(),\r\n      title: initialMessage?.slice(0, 30) || '새로운 채팅',\r\n      date: new Date().toISOString().split('T')[0],\r\n      messages: []\r\n    };\r\n    setChats(prev => [newChat, ...prev]);\r\n    setCurrentChatId(newChat.id);\r\n    setMessages([]);\r\n    return newChat.id;\r\n  };\r\n\r\n  const updateChatMessages = (chatId: string, newMessages: Message[]) => {\r\n    setChats(prev => prev.map(chat => \r\n      chat.id === chatId \r\n        ? { ...chat, messages: newMessages }\r\n        : chat\r\n    ));\r\n  };\r\n\r\n  const handleSendMessage = async (message: string) => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      // 현재 채팅이 없으면 새로 생성\r\n      if (!currentChatId) {\r\n        const newChatId = createNewChat(message);\r\n        setCurrentChatId(newChatId);\r\n      }\r\n\r\n      // 사용자 메시지 추가\r\n      const updatedMessages: Message[] = [...messages, { role: 'user', content: message }];\r\n      setMessages(updatedMessages);\r\n      updateChatMessages(currentChatId!, updatedMessages);\r\n\r\n      const response = await fetch('http://localhost:8000/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'text/event-stream',\r\n        },\r\n        body: JSON.stringify({ message }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n      \r\n      const assistantMessageIndex = updatedMessages.length;\r\n      const newMessages: Message[] = [...updatedMessages, { role: 'assistant', content: '' }];\r\n      setMessages(newMessages);\r\n      updateChatMessages(currentChatId!, newMessages);\r\n\r\n      const reader = response.body?.getReader();\r\n      if (!reader) throw new Error('Reader not available');\r\n\r\n      let fullContent = '';\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n        \r\n        const text = new TextDecoder().decode(value);\r\n        fullContent += text;\r\n        \r\n        const latestMessages: Message[] = [...updatedMessages, { role: 'assistant', content: fullContent }];\r\n        setMessages(latestMessages);\r\n        updateChatMessages(currentChatId!, latestMessages);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('서버에 연결할 수 없습니다. 관리자에게 문의하세요.');\r\n      const revertedMessages = messages.slice(0, -1);\r\n      setMessages(revertedMessages);\r\n      if (currentChatId) {\r\n        updateChatMessages(currentChatId, revertedMessages);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateChatTitle = (chatId: string, newTitle: string) => {\r\n    setChats(prev => prev.map(chat => \r\n      chat.id === chatId \r\n        ? { ...chat, title: newTitle }\r\n        : chat\r\n    ));\r\n  };\r\n\r\n  const handleSelectChat = (chatId: string) => {\r\n    setCurrentChatId(chatId);\r\n    const selectedChat = chats.find(chat => chat.id === chatId);\r\n    if (selectedChat) {\r\n      setMessages(selectedChat.messages);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-white dark:bg-gray-900\">\r\n      <Header />\r\n      \r\n      <div className=\"flex flex-1 pt-16\">\r\n        <div className=\"w-64 bg-gray-50 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700\">\r\n          <Sidebar \r\n            chats={chats}\r\n            currentChatId={currentChatId}\r\n            onNewChat={() => createNewChat()}\r\n            onSelectChat={handleSelectChat}\r\n            onUpdateTitle={updateChatTitle}\r\n          />\r\n        </div>\r\n        \r\n        <main className=\"flex-1 flex flex-col h-[calc(100vh-4rem)]\">\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <ChatMessages messages={messages} />\r\n          </div>\r\n          \r\n          <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900\">\r\n            <ChatInput onSendMessage={handleSendMessage} disabled={isLoading} />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}