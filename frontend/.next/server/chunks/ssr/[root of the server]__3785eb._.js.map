{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\r\n\r\nexport default function Document() {\r\n  return (\r\n    <Html lang=\"ko\">\r\n      <Head>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          as=\"style\"\r\n          href=\"https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/static/pretendard.css\"\r\n        />\r\n      </Head>\r\n      <body>\r\n        <Main />\r\n        <NextScript />\r\n      </body>\r\n    </Html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;0BACH,cAAA,qKAAC;oBACC,KAAI;oBACJ,IAAG;oBACH,MAAK;;;;;;;;;;;0BAGT,qKAAC;;kCACC,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\n\r\ninterface User {\r\n  username: string;  // 단일 식별자로 username만 사용\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  signup: (username: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // 백엔드의 토큰 검증 API 호출\r\n      fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Invalid token');\r\n      })\r\n      .then(userData => {\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', username);  // OAuth2는 'username' 필드를 사용\r\n      formData.append('password', password);\r\n\r\n      const response = await fetch('http://localhost:8000/api/auth/login', {\r\n        method: 'POST',\r\n        body: formData  // JSON 대신 FormData 사용\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        if (error.detail === \"Incorrect email or password\") {\r\n          throw new Error('이메일 또는 비밀번호가 잘못되었습니다');\r\n        }\r\n        throw new Error('로그인 실패');\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.access_token);\r\n      \r\n      // 사용자 정보 가져오기\r\n      const userResponse = await fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${data.access_token}`\r\n        }\r\n      });\r\n\r\n      if (userResponse.ok) {\r\n        const userData = await userResponse.json();\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const signup = async (username: string, password: string) => {\r\n    // 이메일 유효성 검사\r\n    if (username.length > 100) {\r\n      throw new Error('이메일은 100자를 초과할 수 없습니다');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        if (error.detail === \"Email already registered\") {\r\n          throw new Error('같은 아이디가 존재합니다');\r\n        }\r\n        throw new Error('회원가입 실패');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error: any) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return React.createElement(AuthContext.Provider, \r\n    { value: { user, isAuthenticated, login, logout, signup } },\r\n    children\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAcA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA0B;AAEnD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,oBAAoB;YACpB,MAAM,qCAAqC;gBACzC,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;YACF,GACC,IAAI,CAAC,CAAA;gBACJ,IAAI,SAAS,EAAE,EAAE;oBACf,OAAO,SAAS,IAAI;gBACtB;gBACA,MAAM,IAAI,MAAM;YAClB,GACC,IAAI,CAAC,CAAA;gBACJ,QAAQ;gBACR,mBAAmB;YACrB,GACC,KAAK,CAAC;gBACL,aAAa,UAAU,CAAC;gBACxB,QAAQ;gBACR,mBAAmB;YACrB;QACF;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,UAAkB;QACrC,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,YAAY,WAAY,4BAA4B;YACpE,SAAS,MAAM,CAAC,YAAY;YAE5B,MAAM,WAAW,MAAM,MAAM,wCAAwC;gBACnE,QAAQ;gBACR,MAAM,SAAU,sBAAsB;YACxC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,IAAI,MAAM,MAAM,KAAK,+BAA+B;oBAClD,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,aAAa,OAAO,CAAC,SAAS,KAAK,YAAY;YAE/C,cAAc;YACd,MAAM,eAAe,MAAM,MAAM,qCAAqC;gBACpE,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,KAAK,YAAY,EAAE;gBAChD;YACF;YAEA,IAAI,aAAa,EAAE,EAAE;gBACnB,MAAM,WAAW,MAAM,aAAa,IAAI;gBACxC,QAAQ;gBACR,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,mBAAmB;IACrB;IAEA,MAAM,SAAS,OAAO,UAAkB;QACtC,aAAa;QACb,IAAI,SAAS,MAAM,GAAG,KAAK;YACzB,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,yCAAyC;gBACpE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,UAAU;oBACV,UAAU;gBACZ;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,IAAI,MAAM,MAAM,KAAK,4BAA4B;oBAC/C,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,MAAM,SAAS,IAAI;QAC5B,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,MAAM;QACR;IACF;IAEA,qBAAO,mGAAA,CAAA,UAAK,CAAC,aAAa,CAAC,YAAY,QAAQ,EAC7C;QAAE,OAAO;YAAE;YAAM;YAAiB;YAAO;YAAQ;QAAO;IAAE,GAC1D;AAEJ;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\r\nimport type { AppProps } from \"next/app\";\r\nimport { AuthProvider } from '@/hooks/useAuth';\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <AuthProvider>\r\n      <Component {...pageProps} />\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,gHAAA,CAAA,eAAY;kBACX,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/LoginForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface LoginFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function LoginForm({ onClose }: LoginFormProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      await login(email, password);\r\n      onClose();\r\n    } catch (err: any) {\r\n      if (err.message.includes('not found')) {\r\n        setError('아이디가 존재하지 않습니다');\r\n      } else if (err.message.includes('password')) {\r\n        setError('비밀번호 오류입니다');\r\n      } else {\r\n        setError('로그인 중 오류가 발생했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">비밀번호</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n          required\r\n        />\r\n      </div>\r\n      {error && (\r\n        <div className=\"text-red-500 text-sm\">{error}</div>\r\n      )}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors\"\r\n      >\r\n        로그인\r\n      </button>\r\n    </form>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMe,SAAS,UAAU,EAAE,OAAO,EAAkB;IAC3D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAExB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,IAAI;YACF,MAAM,MAAM,OAAO;YACnB;QACF,EAAE,OAAO,KAAU;YACjB,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,cAAc;gBACrC,SAAS;YACX,OAAO,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa;gBAC3C,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,qBACE,qKAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,qKAAC;;kCACC,qKAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,qKAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;wBACV,QAAQ;;;;;;;;;;;;0BAGZ,qKAAC;;kCACC,qKAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,qKAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,WAAU;wBACV,QAAQ;;;;;;;;;;;;YAGX,uBACC,qKAAC;gBAAI,WAAU;0BAAwB;;;;;;0BAEzC,qKAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP"}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/SignupForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface SignupFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function SignupForm({ onClose }: SignupFormProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const { signup } = useAuth();\r\n\r\n  const validateEmail = (email: string) => {\r\n    if (email.length > 100) {\r\n      return '이메일은 100자를 초과할 수 없습니다';\r\n    }\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      return '유효한 이메일 주소를 입력해주세요';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    // 이메일 유효성 검사\r\n    const emailError = validateEmail(email);\r\n    if (emailError) {\r\n      setError(emailError);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await signup(email, password);\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 2000);\r\n    } catch (err: any) {\r\n      if (err.message.includes('같은 아이디가 존재합니다')) {\r\n        setError('같은 아이디가 존재합니다');\r\n        setEmail('');\r\n        setPassword('');\r\n      } else if (err.message.includes('100자를 초과')) {\r\n        setError('이메일은 100자를 초과할 수 없습니다');\r\n      } else {\r\n        setError('회원가입 중 오류가 발생했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      {success ? (\r\n        <div className=\"text-green-500 text-center py-4\">\r\n          회원가입이 완료되었습니다!\r\n          <br />\r\n          로그인 해주세요.\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">이메일</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              maxLength={100}\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n              required\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">최대 100자</p>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">비밀번호</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:outline-none\"\r\n              required\r\n            />\r\n          </div>\r\n          {error && (\r\n            <div className=\"text-red-500 text-sm\">{error}</div>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors\"\r\n          >\r\n            회원가입\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMe,SAAS,WAAW,EAAE,OAAO,EAAmB;IAC7D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAEzB,MAAM,gBAAgB,CAAC;QACrB,IAAI,MAAM,MAAM,GAAG,KAAK;YACtB,OAAO;QACT;QACA,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAC3B,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,aAAa;QACb,MAAM,aAAa,cAAc;QACjC,IAAI,YAAY;YACd,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,OAAO,OAAO;YACpB,WAAW;YACX,WAAW;gBACT;YACF,GAAG;QACL,EAAE,OAAO,KAAU;YACjB,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB;gBACzC,SAAS;gBACT,SAAS;gBACT,YAAY;YACd,OAAO,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa;gBAC3C,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,qBACE,qKAAC;QAAK,UAAU;QAAc,WAAU;kBACrC,wBACC,qKAAC;YAAI,WAAU;;gBAAkC;8BAE/C,qKAAC;;;;;gBAAK;;;;;;iCAIR;;8BACE,qKAAC;;sCACC,qKAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAC3D,qKAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAW;4BACX,WAAU;4BACV,QAAQ;;;;;;sCAEV,qKAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;8BAE5C,qKAAC;;sCACC,qKAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAC3D,qKAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;;gBAGX,uBACC,qKAAC;oBAAI,WAAU;8BAAwB;;;;;;8BAEzC,qKAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;AAOX"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/auth/AuthModal.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport SignupForm from '../auth/SignupForm';\r\n\r\ninterface AuthModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  initialMode?: 'login' | 'signup';\r\n}\r\n\r\nexport default function AuthModal({ isOpen, onClose, initialMode = 'login' }: AuthModalProps) {\r\n  useEffect(() => {\r\n    setMode(initialMode);\r\n  }, [initialMode]);\r\n\r\n  const [mode, setMode] = useState<'login' | 'signup'>(initialMode);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-semibold\">\r\n            {mode === 'login' ? '로그인' : '회원가입'}\r\n          </h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {mode === 'login' ? (\r\n          <LoginForm onClose={onClose} />\r\n        ) : (\r\n          <SignupForm onClose={onClose} />\r\n        )}\r\n\r\n        <div className=\"mt-4 text-center\">\r\n          {mode === 'login' ? (\r\n            <button\r\n              onClick={() => setMode('signup')}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              계정이 없으신가요? 회원가입\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => setMode('login')}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              이미 계정이 있으신가요? 로그인\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAQe,SAAS,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,OAAO,EAAkB;IAC1F,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ;IACV,GAAG;QAAC;KAAY;IAEhB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAsB;IAErD,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCACX,SAAS,UAAU,QAAQ;;;;;;sCAE9B,qKAAC;4BAAO,SAAS;4BAAS,WAAU;sCAClC,cAAA,qKAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,qKAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;gBAK1E,SAAS,wBACR,qKAAC,gIAAA,CAAA,UAAS;oBAAC,SAAS;;;;;yCAEpB,qKAAC,iIAAA,CAAA,UAAU;oBAAC,SAAS;;;;;;8BAGvB,qKAAC;oBAAI,WAAU;8BACZ,SAAS,wBACR,qKAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,WAAU;kCACX;;;;;6CAID,qKAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAQb"}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/components/common/Header.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport Link from 'next/link';\r\nimport AuthModal from '../auth/AuthModal';\r\nimport Image from 'next/image';\r\nimport { useRouter } from 'next/router';\r\n\r\nexport default function Header() {\r\n  const router = useRouter();\r\n  const { user, isAuthenticated, logout } = useAuth();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMode, setModalMode] = useState<'login' | 'signup'>('login');\r\n  const isSignupDisabled = true;\r\n\r\n  // 기능별 활성화 상태 관리\r\n  const featureFlags = {\r\n    aiSearch: true,  // AI Search 기능 비활성화\r\n    aiDocument: false // AI Document 기능 비활성화\r\n  };\r\n\r\n  const openModal = (mode: 'login' | 'signup') => {\r\n    setModalMode(mode);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleProtectedLink = (e: React.MouseEvent, path: string) => {\r\n    e.preventDefault();\r\n    \r\n    // 기능별 활성화 상태 체크\r\n    if (path === '/ai-search' && !featureFlags.aiSearch) {\r\n      alert('현재 개발중인 기능입니다.');\r\n      return;\r\n    }\r\n    if (path === '/ai-document' && !featureFlags.aiDocument) {\r\n      alert('현재 개발중인 기능입니다.');\r\n      return;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      alert('로그인을 먼저 해주세요.');\r\n      return;\r\n    }\r\n    router.push(path);\r\n  };\r\n\r\n  const handleSignupClick = () => {\r\n    if (isSignupDisabled) {\r\n      alert('직접 회원가입은 현재 불가능합니다. 관리자에게 문의해 주세요.');\r\n      return;\r\n    }\r\n    openModal('signup');\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    router.push('/');  // 홈으로 리다이렉트\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"fixed w-full bg-white shadow-sm\">\r\n        <div className=\"container mx-auto px-6 py-4\">\r\n          <nav className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center\">\r\n              <Image \r\n                src=\"/images/logos/penguin.jpg\" \r\n                alt=\"Company Logo\" \r\n                width={150} \r\n                height={60} \r\n                className=\"mr-6\"\r\n              />\r\n              <Link href=\"/\" \r\n                 className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\">\r\n                Home\r\n              </Link>\r\n              <div className=\"h-6 w-[2px] bg-gray-300 mx-2\"></div>\r\n              <a href=\"/ai-search\" \r\n                onClick={(e) => handleProtectedLink(e, '/ai-search')}\r\n                className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors cursor-pointer\">\r\n                AI Search\r\n              </a>\r\n              <div className=\"h-6 w-[2px] bg-gray-300 mx-2\"></div>\r\n              <a href=\"/ai-document\" \r\n                onClick={(e) => handleProtectedLink(e, '/ai-document')}\r\n                className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors cursor-pointer\">\r\n                AI Document Automation\r\n              </a>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              {isAuthenticated ? (\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span className=\"text-gray-700\">{user?.username}</span>\r\n                  <button\r\n                    onClick={handleLogout}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    로그아웃\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={() => openModal('login')}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    로그인\r\n                  </button>\r\n                  <button\r\n                    onClick={handleSignupClick}\r\n                    className=\"text-gray-600 hover:text-blue-600 font-medium px-4 py-2 rounded-lg hover:bg-blue-50 transition-colors\"\r\n                  >\r\n                    회원가입\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n\r\n      <AuthModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        initialMode={modalMode}\r\n      />\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAChD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAsB;IAC/D,MAAM,mBAAmB;IAEzB,gBAAgB;IAChB,MAAM,eAAe;QACnB,UAAU;QACV,YAAY,MAAM,sBAAsB;IAC1C;IAEA,MAAM,YAAY,CAAC;QACjB,aAAa;QACb,eAAe;IACjB;IAEA,MAAM,sBAAsB,CAAC,GAAqB;QAChD,EAAE,cAAc;QAEhB,gBAAgB;QAChB,IAAI,SAAS,gBAAgB,CAAC,aAAa,QAAQ,EAAE;YACnD,MAAM;YACN;QACF;QACA,IAAI,SAAS,kBAAkB,CAAC,aAAa,UAAU,EAAE;YACvD,MAAM;YACN;QACF;QAEA,IAAI,CAAC,iBAAiB;YACpB,MAAM;YACN;QACF;QACA,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,oBAAoB;QACxB,wCAAsB;YACpB,MAAM;YACN;QACF;;IAEF;IAEA,MAAM,eAAe;QACnB,MAAM;QACN,OAAO,IAAI,CAAC,MAAO,YAAY;IACjC;IAEA,qBACE;;0BACE,qKAAC;gBAAO,WAAU;0BAChB,cAAA,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAI,WAAU;;kDACb,qKAAC,sHAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAI;wCACJ,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;;kDAEZ,qKAAC,qHAAA,CAAA,UAAI;wCAAC,MAAK;wCACR,WAAU;kDAAwG;;;;;;kDAGrH,qKAAC;wCAAI,WAAU;;;;;;kDACf,qKAAC;wCAAE,MAAK;wCACN,SAAS,CAAC,IAAM,oBAAoB,GAAG;wCACvC,WAAU;kDAAuH;;;;;;kDAGnI,qKAAC;wCAAI,WAAU;;;;;;kDACf,qKAAC;wCAAE,MAAK;wCACN,SAAS,CAAC,IAAM,oBAAoB,GAAG;wCACvC,WAAU;kDAAuH;;;;;;;;;;;;0CAKrI,qKAAC;gCAAI,WAAU;0CACZ,gCACC,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAK,WAAU;sDAAiB,MAAM;;;;;;sDACvC,qKAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;yDAKH;;sDACE,qKAAC;4CACC,SAAS,IAAM,UAAU;4CACzB,WAAU;sDACX;;;;;;sDAGD,qKAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUb,qKAAC,gIAAA,CAAA,UAAS;gBACR,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,aAAa;;;;;;;;AAIrB"}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 925, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/flash/projects/mygpt/frontend/src/pages/index.tsx"],"sourcesContent":["import Header from '@/components/common/Header';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { useRouter } from 'next/router';\r\n\r\nexport default function Home() {\r\n  const { isAuthenticated } = useAuth();\r\n  const router = useRouter();\r\n\r\n  // 기능별 활성화 상태 관리\r\n  const featureFlags = {\r\n    aiSearch: true,\r\n    aiDocument: false\r\n  };\r\n\r\n  const handleCardClick = (e: React.MouseEvent, path: string) => {\r\n    e.preventDefault();\r\n    \r\n    // 기능별 활성화 상태 체크\r\n    if (path === '/ai-search' && !featureFlags.aiSearch) {\r\n      alert('현재 개발중인 기능입니다.');\r\n      return;\r\n    }\r\n    if (path === '/ai-document' && !featureFlags.aiDocument) {\r\n      alert('현재 개발중인 기능입니다.');\r\n      return;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n      alert('로그인을 먼저 해주세요.');\r\n      return;\r\n    }\r\n    router.push(path);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Header />\r\n      \r\n      <main className=\"container mx-auto px-6 pt-40\">\r\n        <h1 className=\"text-4xl font-bold text-center mb-16\">\r\n          펭귄 AI Platform\r\n        </h1>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\r\n          <a href=\"/ai-search\" \r\n             onClick={(e) => handleCardClick(e, '/ai-search')}\r\n             className=\"flex flex-col items-center p-8 bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow cursor-pointer\">\r\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4\">\r\n              <SearchIcon className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n            <h2 className=\"text-2xl font-semibold mb-2\">AI Search</h2>\r\n          </a>\r\n\r\n          <a href=\"/ai-document\" \r\n             onClick={(e) => handleCardClick(e, '/ai-document')}\r\n             className=\"flex flex-col items-center p-8 bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow cursor-pointer\">\r\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4\">\r\n              <DocumentIcon className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n            <h2 className=\"text-2xl font-semibold mb-2\">AI Document Automation</h2>\r\n          </a>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 아이콘 컴포넌트 (heroicons 사용)\r\nconst SearchIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n  </svg>\r\n);\r\n\r\nconst DocumentIcon = ({ className }: { className?: string }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n  </svg>\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,gHAAA,CAAA,UAAO,AAAD;IAClC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,gBAAgB;IAChB,MAAM,eAAe;QACnB,UAAU;QACV,YAAY;IACd;IAEA,MAAM,kBAAkB,CAAC,GAAqB;QAC5C,EAAE,cAAc;QAEhB,gBAAgB;QAChB,IAAI,SAAS,gBAAgB,CAAC,aAAa,QAAQ,EAAE;YACnD,MAAM;YACN;QACF;QACA,IAAI,SAAS,kBAAkB,CAAC,aAAa,UAAU,EAAE;YACvD,MAAM;YACN;QACF;QAEA,IAAI,CAAC,iBAAiB;YACpB,MAAM;YACN;QACF;QACA,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC,+HAAA,CAAA,UAAM;;;;;0BAEP,qKAAC;gBAAK,WAAU;;kCACd,qKAAC;wBAAG,WAAU;kCAAuC;;;;;;kCAIrD,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAE,MAAK;gCACL,SAAS,CAAC,IAAM,gBAAgB,GAAG;gCACnC,WAAU;;kDACX,qKAAC;wCAAI,WAAU;kDACb,cAAA,qKAAC;4CAAW,WAAU;;;;;;;;;;;kDAExB,qKAAC;wCAAG,WAAU;kDAA8B;;;;;;;;;;;;0CAG9C,qKAAC;gCAAE,MAAK;gCACL,SAAS,CAAC,IAAM,gBAAgB,GAAG;gCACnC,WAAU;;kDACX,qKAAC;wCAAI,WAAU;kDACb,cAAA,qKAAC;4CAAa,WAAU;;;;;;;;;;;kDAE1B,qKAAC;wCAAG,WAAU;kDAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxD;AAEA,0BAA0B;AAC1B,MAAM,aAAa,CAAC,EAAE,SAAS,EAA0B,iBACvD,qKAAC;QAAI,OAAM;QAA6B,WAAW;QAAW,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACnG,cAAA,qKAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,eAAe,CAAC,EAAE,SAAS,EAA0B,iBACzD,qKAAC;QAAI,OAAM;QAA6B,WAAW;QAAW,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACnG,cAAA,qKAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE"}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}